{
  "name": "Jmic",
  "tagline": "JMIC is a simple webapp to extract important information from emails using specific patterns.",
  "body": "# Java Mail Info Collector - JMIC [![wercker status](https://app.wercker.com/status/2fd82aede5750d80a0e51d1df3e85835/s \"wercker status\")](https://app.wercker.com/project/bykey/2fd82aede5750d80a0e51d1df3e85835)\r\nJMIC is a simple webapp to extract important information from emails using specific patterns.\r\n\r\nProject uses Java 7, Spring Boot as core framework application, gradle 2.12 as building tool and Maven Central as dependencies repository.\r\n\r\nIt generates a '.war' file that can be depployed into a servlet-container like Tomcat. JMIC uses MySQL but you can change for another SQL database.\r\n\r\n# Limitations:\r\n- Must be only one persistance table for all fields\r\n- Persistance table MUST have column \"ID\" (Primary Key) and it must be the ONLY \"NOT NULL\" column.\r\n- Since mail fields are matched using regular expressions, user must know its syntax. Maybe even java particularities for it like special character escapes.\r\n\r\n# Dependencies:\r\n- mysql:mysql-connector-java\r\n- com.h2database:h2:1.4.191\r\n- org.apache.commons:commons-email:1.4\r\n- org.apache.commons:commons-lang3:3.4\r\n- org.springframework.boot:spring-boot-starter-jdbc\r\n- org.springframework.boot:spring-boot-starter-mail\r\n- org.springframework.boot:spring-boot-starter-web\r\n- org.springframework.boot:spring-boot-starter-tomcat\r\n- org.springframework.boot:spring-boot-starter-test\r\n\r\n# Filters configuration:\r\nThese configurations defines which emails jmic will consider to do all the work. The more restricted search, faster will be the process.  \r\n\r\n- subject\r\n    + Sets keywords that lib should search at messages subject.\r\n    + If null, it will search all message subjects\r\n- sender\r\n    + Sets the sender email that lib should search.\r\n    + If null, it will search all senders.\r\n- unread\r\n    + Sets the read/unread mail flag.\r\n    + 'True' will search for unread mails.\r\n    + 'False' will search for read mails.\r\n    + If null, it will search for both.\r\n- daysago\r\n    + Sets the how much days from now to past the app should search.\r\n    + If null, it will search all the time.\r\n    + PS: The bigger it is, more mails will catch and can let the system too slow. If let it null, will get all time emails and its VERY UNRECOMENDED!\r\n\r\n# Fields configuration:\r\nThese are the fields that you want to get from the messages.\r\n\r\n- fieldName\r\n    + Represents the name of the field defined by his patterns.\r\n\r\n- fieldStartPattern\r\n    + Defines the pattern that mark the start of the wanted information.\r\n\r\n- fieldEndPattern\r\n    + Defines the pattern that mark the end of the wanted information.\r\n\r\n# Important:\r\nFor google accounts maybe you need to active the \"Less secure apps\" option:\r\n- https://www.google.com/settings/security/lesssecureapps\r\n\r\n# References:\r\n- http://www.compiletimeerror.com/2013/06/reading-email-using-javamail-api-example.html#.VvBXfHyrRD8\r\n- http://www.oracle.com/technetwork/java/javamail/faq/index.html#gmail\r\n- https://gusto77.wordpress.com/2012/04/03/extracting-text-from-email-message-with-javamail/\r\n- http://stackoverflow.com/questions/870045/java-imap-fetch-messages-since-a-date\r\n\r\n# Mirrors:\r\n- https://gitlab.com/brunokenshin/jmic\r\n\r\n# Stable Versions:\r\n- https://gitlab.com/groups/viladosite_projs/jmic\r\n\r\n# Build Information:\r\n[![wercker status](https://app.wercker.com/status/2fd82aede5750d80a0e51d1df3e85835/m \"wercker status\")](https://app.wercker.com/project/bykey/2fd82aede5750d80a0e51d1df3e85835)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}